version: '3.8'

services:

  base:
    build:
      context: ./docker
      dockerfile: base.dockerfile
    volumes:
      - ./docker/volumes/certbot:/var/www/certbot/:rw
      - ./docker/volumes/letsencrypt/:/etc/letsencrypt/:rw

  nginx:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
    restart: "always"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/config/nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./docker/config/nginx/sites:/var/www
      - ./docker/volumes/certbot:/var/www/certbot/:ro
      - ./docker/volumes/letsencrypt/:/etc/nginx/ssl/:ro

  mailserver:
    build:
      context: ./docker
      dockerfile: mailserver.dockerfile
    # If the FQDN for your mail-server is only two labels (eg: example.com),
    # you can assign this entirely to `hostname` and remove `domainname`.
    hostname: mail
    domainname: example.com
    env_file: ./docker/config/mailserver/mailserver.env
    # More information about the mail-server ports:
    # https://docker-mailserver.github.io/docker-mailserver/edge/config/security/understanding-the-ports/
    # To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.
    ports:
      - "25:25"    # SMTP  (explicit TLS => STARTTLS)
      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
      - "993:993"  # IMAP4 (implicit TLS)
    volumes:
      - ./docker/volumes/mailserver/mail-data/:/var/mail/
      - ./docker/volumes/mailserver/mail-state/:/var/mail-state/
      - ./docker/volumes/mailserver/mail-logs/:/var/log/mail/
      - ./docker/config/mailserver/config/:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
    restart: always
    stop_grace_period: 1m
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0
    
  # pgsql:
  #   build:
  #     context: ./docker
  #     dockerfile: pgsql.dockerfile
  #   restart: "always"
  #   ports:
  #     - '5432:5432'
  #   environment:
  #     PGPASSWORD: 'secret'
  #     POSTGRES_DB: 'base'
  #     POSTGRES_USER: 'user'
  #     POSTGRES_PASSWORD: 'secret'
  #   volumes:
  #     - './docker/volumes/pgsql/data:/var/lib/postgresql/data'

  # mysql:
  #   build:
  #     context: ./docker
  #     dockerfile: mysql.dockerfile
  #   restart: "always"
  #   ports:
  #     - '3306:3306'
  #   environment:
  #     MYSQL_DATABASE: 'base'
  #     MYSQL_ROOT_PASSWORD: 'secret'
  #   volumes:
  #     - './docker/volumes/mysql/data:/var/lib/mysql'

  # mariadb:
  #   build:
  #     context: ./docker
  #     dockerfile: mariadb.dockerfile
  #   restart: "always"
  #   ports:
  #     - '33066:33066'
  #   environment:
  #     MARIADB_DATABASE: 'base'
  #     MARIADB_ROOT_PASSWORD: 'secret'
  #   volumes:
  #     - './docker/volumes/mariadb/data:/var/lib/mysql'

  # mongo:
  #   build:
  #     context: ./docker
  #     dockerfile: mongo.dockerfile
  #   restart: "always"
  #   ports:
  #     - '27017:27017'
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: 'root'
  #     MONGO_INITDB_ROOT_PASSWORD: 'secret'
  #   volumes:
  #     - './docker/volumes/mongo/data:/data/db'
